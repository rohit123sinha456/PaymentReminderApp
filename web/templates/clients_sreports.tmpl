<!DOCTYPE html>
<html lang="en">
{{template "header" .}}
<body>
  {{template "navbar" .}}
  {{template "sidebar" .}}
  <main id="main" class="main">

    <div class="pagetitle">
      <h1>Client Service Reports</h1>
      <nav>
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="index.html">Home</a></li>
          <li class="breadcrumb-item active">Service Reports</li>
        </ol>
      </nav>
    </div><!-- End Page Title -->

    <section class="section dashboard">
        <div class="row">
            <div class="col-lg-12">
    
              <div class="card">
                <div class="card-body">
                  <h5 class="card-title">Service Reports</h5>

                  <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#basicModal">
                    Create Service Reports
                  </button>
                  <div class="modal fade" id="basicModal" tabindex="-1">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h5 class="modal-title">Create Payment Reminder</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">

                          <div class="card">
                            <div class="card-body">
                              <h5 class="card-title">General Form Elements</h5>
                
                              <!-- General Form Elements -->
                              <form id="sreportCreateForm">
                                <div class="row mb-3">
                                  <label for="inputDate" class="col-sm-6 col-form-label">Report Date</label>
                                  <div class="col-sm-6">
                                    <input type="date" class="form-control" id="inputSReportDate" required>
                                  </div>
                                </div>
                                <div class="row mb-3">
                                  <label for="inputDate" class="col-sm-6 col-form-label">Sent Date</label>
                                  <div class="col-sm-6">
                                    <input type="date" class="form-control" id="inputSentDate" required>
                                  </div>
                                </div>
                                <div class="row mb-3">
                                  <label for="inputText" class="col-sm-6 col-form-label">Report Number</label>
                                  <div class="col-sm-6">
                                    <input type="text" class="form-control" id="inputSReportNumber" required>
                                  </div>
                                </div>
                                <div class="row mb-3">
                                  <label for="inputText" class="col-sm-6 col-form-label">System Status</label>
                                  <div class="col-sm-6">
                                    <input type="text" class="form-control" id="inputSystemStatus" required>
                                  </div>
                                </div>
                                <div class="row mb-3">
                                  <label for="inputText" class="col-sm-6 col-form-label">Notes</label>
                                  <div class="col-sm-6">
                                    <input type="text" class="form-control" id="inputSReportNotes" required>
                                  </div>
                                </div>  
                                <div class="row mb-3">
                                  <label for="inputText" class="col-sm-6 col-form-label">Report Link</label>
                                  <div class="col-sm-6">
                                    <input type="text" class="form-control" id="inputSreportLink" required>
                                  </div>
                                </div>
                                <div class="modal-footer">
                                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                  <button type="submit" class="btn btn-primary" id="saveChangesBtn">Save changes</button>
                                </div>
                              </form><!-- End General Form Elements -->
                
                            </div>
                          </div>

                        
                        </div>
                        
                      </div>
                    </div>
                  </div><!-- End Basic Modal-->




                  <!-- Default Table -->
                  <table class="table" id="paymentsTable">
                    <thead>
                      <tr>
                        <th scope="col">#</th>
                        <th scope="col">Report Date</th>
                        <th scope="col">Sent Date</th>
                        <th scope="col">System Status</th>
                        <th scope="col">Attention Rquired</th>
                        <th scope="col">Link</th>
                        <th scope="col">Action</th>


                      </tr>
                    </thead>
                    <tbody>
                      <!-- Payment data will be inserted here -->
                    </tbody>
                  </table>
                  <!-- End Default Table Example -->
                </div>
              </div>
    
    </section>

  </main><!-- End #main -->

<script>
    function formatDate(dateString) {
        const options = { year: 'numeric', month: 'long', day: 'numeric'};
        return new Date(dateString).toLocaleDateString(undefined, options);
    }

    $(document).ready(function() {
        // Extract client_id from the URL
        const token = localStorage.getItem('jwt');
        var editQuotationId = null;
        var urlParams = new URLSearchParams(window.location.search);
        var clientID = urlParams.get('cid');

        // Function to fetch and display payments
        function fetchPayments() {
            $.ajax({
                url: '/api/web/servicereports/client/' + clientID,
                method: 'GET',
                headers: {
                  'Authorization': token
                },
                success: function(data) {
                    var tbody = $('#paymentsTable tbody');
                    tbody.empty(); // Clear previous data
                    data.forEach(function(sreport) {
                      var switchChecked = sreport.AttentionRequired ? 'checked' : '';
                        var row = '<tr>' +
                            '<td>' + sreport.ID + '</td>' +
                            '<td>' + formatDate(sreport.ServiceReportDate) + '</td>' +
                            '<td>' + formatDate(sreport.SentDate) + '</td>' +
                            '<td>' + sreport.SystemStatus + '</td>' +
                            '<td><input type="checkbox" class="form-check-input isApprovedSwitch" data-id="' + sreport.ID + '" ' + switchChecked + '></td>' +
                            '<td>' + '<a href='+ sreport.ServiceReportLink +'> Invoices </a>' + '</td>'+
                            '<td><button type="button" class="btn btn-warning btn-sm" onclick="editClient(' + sreport.ID + ')">Edit</button></td>' +
                            '<td><button type="button" class="btn btn-warning btn-sm" onclick="deleteClient(' + sreport.ID + ')">Delete</button></td>' +


                            '</tr>';
                        tbody.append(row);
                    });
                    $('.isApprovedSwitch').change(function() {
                      var sreportID = $(this).data('id');
                      var isapproved = $(this).is(':checked');
                      console.log('clicked');
                      $.ajax({
                          url: '/api/web/servicereports/' + sreportID,
                          method: 'PUT',
                          headers: {
                            'Authorization': token
                          },
                          contentType: 'application/json',
                          data: JSON.stringify({ attentionrequired: isapproved }),
                          success: function(response) {
                              console.log(isapproved)
                              console.log('Payment status updated successfully');
                          },
                          error: function(error) {
                              console.error('Error updating payment status:', error);
                          }
                      });
                  });
                },
                error: function(error) {
                    console.error('Error fetching payments:', error);
                }
            });
        }

        // Function to send form data to the server
        $('#sreportCreateForm').on('submit', function() {
            var data = {
                servicereportdate: new Date($('#inputSReportDate').val()).toISOString(),
                sentdate: new Date($('#inputSentDate').val()).toISOString(),
                servicereportnumber: $('#inputSReportNumber').val(),
                systemstatus: $('#inputSystemStatus').val(),
                servicereportnotes: $('#inputSReportNotes').val(),
                servicereportlink: $('#inputSreportLink').val(),
                attentionrequired: $('#inputIsPaid').val() === "true",
                clientid: parseInt(clientID)
            };

            var url = editQuotationId ? '/api/web/servicereports/' + editQuotationId : '/api/web/servicereports';
            var method = editQuotationId ? 'PUT' : 'POST';

            $.ajax({
                url: url,
                method: method,
                headers: {
                  'Authorization': token
                },
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function(response) {
                    // Handle success, maybe reload the table or close the modal
                    $('#basicModal').modal('hide');
                    console.log("success")
                    location.reload()

                },
                error: function(error) {
                    console.error('Error saving payment:', error);
                }
            });
        });

        // Function to populate the modal with client data for editing
        window.editClient = function(sreportID) {
            $.ajax({
                url: '/api/web/servicereports/' + sreportID,
                method: 'GET',
                headers: {
                  'Authorization': token
                },
                success: function(data) {
                  let dateObj = new Date(data.ServiceReportDate);
                  let day = String(dateObj.getDate()).padStart(2, '0');
                  let month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Months are zero-based
                  let year = dateObj.getFullYear();
                  let formattedDate = `${year}-${month}-${day}`;
                  $('#inputSReportDate').val(formattedDate);

                  let ssentdateObj = new Date(data.SentDate);
                  let sday = String(ssentdateObj.getDate()).padStart(2, '0');
                  let smonth = String(ssentdateObj.getMonth() + 1).padStart(2, '0'); // Months are zero-based
                  let syear = ssentdateObj.getFullYear();
                  let sformattedDate = `${syear}-${smonth}-${sday}`;
                  $('#inputSentDate').val(sformattedDate);

                    $('#inputSReportNumber').val(data.ServiceReportNumber);
                    $('#inputSystemStatus').val(data.SystemStatus);
                    $('#inputSReportNotes').val(data.ServiceReportNotes);
                    $('#inputSreportLink').val(data.ServiceReportLink);
                    $('#inputIsPaid').val(data.AttentionRequired);
                    $('#basicModal').modal('show');
                    editQuotationId = sreportID;
                },
                error: function(error) {
                    console.error('Error fetching client data:', error);
                }
            });
        }

        window.deleteClient = function(sreportID) {
          $.ajax({
              url: '/api/web/servicereports/' + sreportID,
              method: 'DELETE',
              headers: {
                'Authorization': token
              },
              success: function(data) {
                console.log("deleted Client Successfully")
                location.reload()
              },
              error: function(error) {
                  console.error('Error fetching client data:', error);
              }
          });
      }

        // Fetch payments on page load
        fetchPayments();
    });
</script>
</body>
</html>
